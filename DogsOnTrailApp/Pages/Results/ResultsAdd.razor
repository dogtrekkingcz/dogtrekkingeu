@using DogsOnTrailApp.Models
@using SharedCode.Entities
@using Google.Type
@using MapsterMapper
@using Protos.Results
@using Protos.Shared
@using DogsOnTrailApp.Shared
@using SharedCode.Extensions
@using DateTime = System.DateTime

@inject IStringLocalizer<Resource> Localizer
@inject Protos.Results.Results.ResultsClient ResultsClient
@inject IMapper Mapper

<h3>@Localizer["Results.Manage.Add"]</h3>
<section>
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-md-6">
                <label>@Localizer["Results.Manage.Add.Firstname"]</label>
            </div>
            <div class="col-xs-12 col-md-6">
                <InputText @bind-Value="@FirstName"/>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-6">
                <label>@Localizer["Results.Manage.Add.Lastname"]</label>
            </div>
            <div class="col-xs-12 col-md-6">
                <InputText @bind-Value="@LastName"/>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-6">
                <label>@Localizer["Results.Manage.Add.Start"]</label>
            </div>
            <div class="col-xs-12 col-md-6">
                <InputDateTimeComponent Model="@StartProxy" StartDate="DateTime.Today" />
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-6">
                <label>@Localizer["Results.Manage.Add.Finish"]</label>
            </div>
            <div class="col-xs-12 col-md-6">
                <InputDateTimeComponent Model="@FinishProxy" StartDate="DateTime.Today" />
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-6">
                <label>@Localizer["Results.Manage.Add.WholeTime"]</label>
            </div>
            <div class="col-xs-12 col-md-6">
                <InputTimeCalcComponent Model="@WholeTimeProxy" />
            </div>
        </div>
    </div>
</section>
<button @onclick="@(async () => await SubmitAsync())" class="btn btn-primary">@Localizer["Results.AddResult.Submit"]</button>

@code {
    [Parameter] public string ActionId { get; set; }
    [Parameter] public ActionModel.RaceDto Race { get; set; }
    [Parameter] public ActionModel.CategoryDto Category { get; set; }
    
    [Parameter]
    public EventCallback<ActionModel.RacerDto> OnResultAddedCallback { get; set; }
    
    public string FirstName { get; set; }
    public string LastName { get; set; }
    private string Phone { get; set; }
    private string Email { get; set; }
    private AddNewResult_FinalState State { get; set; }
    private Google.Type.DateTime Start { get; set; }
    private Google.Type.DateTime Finish { get; set; }

    private InputTimeModel StartProxy = new();
    private InputTimeModel FinishProxy = new();
    private InputTimeSpanModel WholeTimeProxy = new();

    protected async Task SubmitAsync()
    {
        if (StartProxy.IsValid)
            Start = StartProxy.Value;

        if (FinishProxy.IsValid)
            Finish = FinishProxy.Value;

        if (WholeTimeProxy.IsValid)
        {
            Start = Race.Begin.ToGoogleDateTime();
            Finish = (Race.Begin.AddSeconds(WholeTimeProxy.Value.Seconds)).ToGoogleDateTime();
        }
        
        await ResultsClient.addResultAsync(new AddResultRequest {
            ActionId = ActionId,
            RaceId = Race.Id.ToString(),
            CategoryId = Category.Id.ToString(),
            Name = FirstName,
            Surname = LastName,
            Phone = Phone,
            Email = Email,
            State = Mapper.Map<AddResultRequest_FinalState>(State),
            Start = Start,
            Finish = Finish
        });
    }
}