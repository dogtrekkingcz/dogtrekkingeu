@using Microsoft.AspNetCore.Components
@using DogsOnTrailApp.Models
@using MongoDB.Driver.Core.Operations
@using SharedCode.Entities
@using System.Collections.ObjectModel

@inject IModalService modal
@inject IStringLocalizer<Resource> localizer

<h3>@localizer["Action races"]</h3>

<section>
    <table>
        <thead>
            <th>@localizer["Actions.Races.Name"]</th>
            <th>@localizer["Actions.Races.Categories"]</th>
            <th>@localizer["Actions.Races.Payments"]</th>
            <th>@localizer["Actions.Races.Limits"]</th>
            <th>@localizer["Actions"]</th>
        </thead>
        <tbody>

        @foreach (var modelRace in Model.Races)
        {
            <tr>
                <td>@modelRace.Name</td>
                <td>
                    <ul>
                        @foreach (var ctg in modelRace.Categories)
                        {
                            <li>@ctg.Name</li>
                        }
                    </ul>
                </td>
                <td>
                    <ul>
                        @foreach (var payment in modelRace.Payments)
                        {
                            <li>@payment.From.ToString("yyyy-MM-dd") - @payment.To.ToString("yyyy-MM-dd"): <b>@payment.Price @payment.Currency</b></li>
                        }
                    </ul>
                </td>
                <td>
                    <ul>
                        <li>@localizer["Actions.Races.Limits.MinimalAgeOfDogForRace"]: @(modelRace.Limits.MinimalAgeOfTheDogInDayes / 30)</li>
                        <li>@localizer["Actions.Races.Limits.MinimalAgeOfRacerForRace"]: @(modelRace.Limits.MinimalAgeOfRacerInDayes / 365)</li>
                        <li>@localizer["Actions.Races.Limits.WithDogs"]: @(modelRace.Limits.WithDogs)</li>
                    </ul>
                </td>
                <td></td>
            </tr>
        }
        </tbody>
    </table>
    
    <hr />
    <input type="button" 
           @onclick="@(() => FillOfficialDtRaceTemplate())" 
           value="@localizer["Actions.Races.FillOfficialDogTrekkingRace"]"
    />
    <input type="button" 
           @onclick="@(() => FillOfficialDmRaceTemplate())" 
           value="@localizer["Actions.Races.FillOfficialDogMarathonRace"]" 
    />
    <input type="button" 
           @onclick="@(() => FillShortRaceTemplate())" 
           value="@localizer["Actions.Races.FillShortRace"]" 
    />
</section>


@code {
    [Parameter]
    public ActionModel Model { get; set; }

    private void FillOfficialDtRaceTemplate()
    {
        Model.Races ??= new List<RaceDto>();

        Model.Races.Add(new RaceDto
        {
            Name = "DogTrekking",
            Begin = Model.Term.From.AddDays(1),
            MaxNumberOfCompetitors = int.MaxValue,
            EnteringFrom = DateTimeOffset.Now,
            EnteringTo = Model.Term.To,
            Categories = new List<CategoryDto>
            {
                { new CategoryDto { Name = "DTW1" } },
                { new CategoryDto() { Name = "DTM1" } },
                { new CategoryDto { Name = "DTW2" } },
                { new CategoryDto { Name = "DTM2" } }
            },
            Limits = new RaceDto.LimitsDto
            {
                MinimalAgeOfTheDogInDayes = 18 * 30, // 18 months
                MinimalAgeOfRacerInDayes = 15 * 12 * 30 // 15 years
            },
            Payments = new List<RaceDto.PaymentDefinitionDto>
            {
                new RaceDto.PaymentDefinitionDto
                {
                    Currency = "Czk",
                    From = DateTimeOffset.Now,
                    To = DateTimeOffset.MaxValue,
                    Price = 500
                }
            }
        });
    }

    private void FillOfficialDmRaceTemplate()
    {
        Model.Races ??= new List<RaceDto>();
        
        Model.Races.Add(new RaceDto
        {
            Name = "DogMarathon",
            Begin = Model.Term.From.AddDays(2),
            MaxNumberOfCompetitors = int.MaxValue,
            EnteringFrom = DateTimeOffset.Now,
            EnteringTo = Model.Term.To,
            Categories = new List<CategoryDto>
            {
                { new CategoryDto { Name = "DMW1" }},
                { new CategoryDto { Name = "DMM1" }},
                { new CategoryDto { Name = "DMW2" }},
                { new CategoryDto { Name = "DMM2" }}
            },
            Limits = new RaceDto.LimitsDto
            {
                MinimalAgeOfTheDogInDayes = 18 * 30, // 18 months
                MinimalAgeOfRacerInDayes = 15 * 12 * 30 // 15 years
            },
            Payments = new List<RaceDto.PaymentDefinitionDto>
            {
                new RaceDto.PaymentDefinitionDto
                {
                    Currency = "Czk",
                    From = DateTimeOffset.Now,
                    To = DateTimeOffset.MaxValue,
                    Price = 400
                }
            }
        });
    }

    private void FillShortRaceTemplate()
    {
        Model.Races ??= new List<RaceDto>();
       
        Model.Races.Add(new RaceDto
        {
            Name = "Short",
            Begin = Model.Term.From.AddDays(2),
            MaxNumberOfCompetitors = int.MaxValue,
            EnteringFrom = DateTimeOffset.Now,
            EnteringTo = Model.Term.To,
            Categories = new List<CategoryDto>
            {
                { new CategoryDto { Name = "Short" }}
            },
            Limits = new RaceDto.LimitsDto
            {
                MinimalAgeOfTheDogInDayes = 0,
                MinimalAgeOfRacerInDayes = 0
            },
            Payments = new List<RaceDto.PaymentDefinitionDto>
            {
                new RaceDto.PaymentDefinitionDto
                {
                    Currency = "Czk",
                    From = DateTimeOffset.Now,
                    To = DateTimeOffset.MaxValue,
                    Price = 300
                }
            }
        });
    }
}