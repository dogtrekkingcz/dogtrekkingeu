@page "/Checkpoint"
@using Google.Type
@using DateTime = System.DateTime
@using DogsOnTrailApp.Extensions
@inject Protos.Checkpoints.Checkpoints.CheckpointsClient CheckpointsClient

@inject IJSRuntime JsRuntime

<h3>Checkpoint</h3>

<div id="loadingMessage">🎥 Unable to access video stream (please make sure you have a webcam enabled)</div>
<canvas id="canvas" hidden></canvas>

<div id="output" hidden>
    <div id="outputMessage">No QR code detected.</div>
    <div hidden><b>Data:</b> <span id="outputData"></span></div>
</div>

<button type="button" @onclick="() => SendCurrentPosition()">Send current position</button>
  
@code {
    internal record GeoLocationPosition 
    {
        public double latitude { get; set; }
        public double longitude { get; set; }
        public double accuracy { get; set; }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("createQrReader");
            
            var currentPosition = await JsRuntime.InvokeAsync<GeoLocationPosition>("getGpsLocation");
            
            Console.WriteLine(currentPosition);
            
            await CheckpointsClient.addCheckpointAsync(
                new Protos.Checkpoints.AddCheckpoint.AddCheckpointRequest {
                    Position = new LatLng
                    {
                        Latitude = currentPosition.latitude,
                        Longitude = currentPosition.longitude
                    },
                    Name = "Test",
                    Description = "Desc test",
                    CheckpointTime = DateTimeOffset.Now.ToGoogleDateTime(),
                    ActionId = Guid.Empty.ToString(),
                    Data = "Testing data",
                    CheckpointId = Guid.NewGuid().ToString()
                });
        }
    }

    private async Task SendCurrentPosition()
    {
        var currentPosition = await JsRuntime.InvokeAsync<GeoLocationPosition>("getGpsLocation");
            
        await CheckpointsClient.addCheckpointAsync(
            new Protos.Checkpoints.AddCheckpoint.AddCheckpointRequest {
                Position = new LatLng
                {
                    Latitude = currentPosition.latitude,
                    Longitude = currentPosition.longitude
                },
                Name = "Test",
                Description = "Desc test",
                CheckpointTime = DateTimeOffset.Now.ToGoogleDateTime(),
                ActionId = Guid.Empty.ToString(),
                Data = "Testing data",
                CheckpointId = Guid.NewGuid().ToString()
            });
    }
}