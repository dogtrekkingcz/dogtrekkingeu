version: '3.5'

services:
  petsontrail_grpc:
    container_name: PetsOnTrail.gRPC
    build:
      context: .
      dockerfile: API.GRPCService/Dockerfile
    ports:
      - 4080:80
      - 4443:443
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80
    volumes:
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/privkey.pem:/app/privkey.pem:ro
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/fullchain.pem:/app/fullchain.pem:ro
      - /petsontrail_data/backup:/backup
    networks:
      - backend
      - frontend
      
  petsontrail_webapi:
    container_name: PetsOnTrail.WebApi
    build:
      context: .
      dockerfile: API.WebApiService/Dockerfile
    ports:
      - 3080:80
      - 3443:443
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80
    volumes:
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/privkey.pem:/app/privkey.pem:ro
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/fullchain.pem:/app/fullchain.pem:ro
      - /petsontrail_data/backup:/backup
    networks:
      - frontend
      - backend
      
  petsontrail_app: 
    container_name: PetsOnTrail.App
    restart: unless-stopped
    build:
      context: .
      dockerfile: frontend/PetsOnTrailApp/Dockerfile
    environment:
      - CERTBOT_EMAIL=rdk.kotesovec@gmail.com
    env_file:
      - ./nginx-certbot.env
    ports:
      - 443:443
      - 80:80
    networks:
      - frontend
      - backend
    volumes:
      - /petsontrail_data/nginx_secrets:/etc/letsencrypt
      - /petsontrail_data/user_conf.d:/etc/nginx/user_conf.d:ro
      - /petsontrail_data/certbot/conf/live/petsontrail.eu:/etc/nginx/ssl/live/petsontrail.eu:ro
      - /petsontrail_data/PetsOnTrail.App/appsettings.json:/usr/share/nginx/html/appsettings.json
      
  dtdata_db:
    image: mongo:latest
    container_name: PetsOnTrail.DB
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: PetsOnTrailDb
    ports:
      - 27017:27017
    volumes:
      - /petsontrail_data/mongo_db:/data/db
    networks:
      - backend
    restart: always
   
  keycloakdb:
    image: postgres
    container_name: PetsOnTrail.KeyCloakDB
    environment:
      POSTGRES_DB: keycl0ak
      POSTGRES_USER: keycl0ak
      POSTGRES_PASSWORD: password
    ports:
      - 5431:5431
    volumes:
      - /petsontrail_data/postgres_db:/var/lib/postgresql/data
    networks:
      - backend
    restart: always

  keycloak:
    container_name: PetsOnTrail.KeyCloak
    build:
      context: .
      dockerfile: keycloak/Dockerfile
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycl0ak
      KC_DB_USERNAME: keycl0ak
      KC_DB_PASSWORD: password
      KC_LOG_LEVEL: info
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
      KEYCLOAK_ADMIN: administrat0r
      KEYCLOAK_ADMIN_PASSWORD: asc88a8c0ssssqs
    command: start
    depends_on:
      - keycloakdb
    ports:
      - 8443:8443
    volumes:
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/fullchain.pem:/opt/keycloak/conf/server.crt.pem
      - /petsontrail_data/nginx_secrets/live/petsontrail_eu/privkey.pem:/opt/keycloak/conf/server.key.pem
    networks:
      - frontend
      - backend
    restart: always
      
  mail:
    image: bytemark/smtp
    restart: always

  # MessageQueue not necessary yet
  #mq:
  #  image: rabbitmq:management
  #  container_name: message-queue
  #  ports:
  #    - 15672:15672
  #    - 5672:5672
  #    - 5671:5671
  #  volumes:
  #    - data_mq:/var/lib/rabbitmq
      
volumes:
  data_petsontrail_db:
  data_mq:
  postgres_data:
      driver: local
  nginx_secrets:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    
