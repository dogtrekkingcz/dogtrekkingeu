@page "/"
@using GpsTracker.Services
@using MapsterMapper

@inject IGpsPositionService GpsPositionService;
@inject IPositionRepository PositionRepository;
@inject IFgService _service;
@inject Mapper Mapper;

<h1>PetsOnTrail Position Tracker</h1>
Current position is: @CurrentPosition

<button @onclick="@(async () => await StartGpsTrackerServiceAsync())">Start gps tracker service</button>
<button @onclick="@(async () => await StopGpsTrackerServiceAsync())">Stop gps tracker service</button>

@code {
    private string CurrentPosition { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        GpsPositionService.OnChange += OnChangeHandler;
    }

    private async Task StartGpsTrackerServiceAsync()
    {
        _service.Start();
    }

    private async void OnChangeHandler()
    {
        CurrentPosition = $"{GpsPositionService.CurrentPosition.Latitude}N, {GpsPositionService.CurrentPosition.Longitude}E";
        
        await InvokeAsync(StateHasChanged);

        await PositionRepository.AddAsync(Mapper.Map<IPositionRepository.PositionDto>(GpsPositionService.CurrentPosition));
    }
    
    private async Task StopGpsTrackerServiceAsync()
    {
        _service.Stop();
    }
}