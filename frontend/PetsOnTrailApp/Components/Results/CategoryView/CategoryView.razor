@page "/category/{ActionId}/{RaceId}/{CategoryId}"

@using PetsOnTrailApp.Components.ActionView

@inherits CategoryViewBase

@inject IStringLocalizer<Resource> Localizer

@* <ResultsAdd 
    ActionId="@ActionId" 
    RaceId="@RaceId"
    RaceBegin="@actionRace.Begin"
    RaceEnd="@actionRace.End"
    CategoryId="@CategoryId"
    OnResultAddedCallback="(args) => ResultAdded(args.Item1, args.Item2, args.Item3)" />
<hr /> *@

<ActionViewHeader ActionId="@ActionId" />

<table class="table">
    <thead>
    <tr>
        <th>@Localizer["#"]</th>
        <th>@Localizer["Results.SurnameName"]</th>
        <th>@Localizer["Results.Time"]</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var racer in Model.Results
        .OrderBy(r =>
        {
            var totalTime = r.Finish.HasValue && r.Start.HasValue ? r.Finish.Value - r.Start.Value : TimeSpan.MaxValue;
            return (long) totalTime.TotalSeconds;
        }))
    {
        <tr>
            <td>
                <div class="col-12">?</div>
            </td>
            <td>
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            @racer.LastName, @racer.FirstName
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <ul>
                                @foreach (var pet in racer.Pets)
                                {
                                    <li>@pet</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </td>
            <td>
                <div class="container">
                    <div class="row">
                        @{
                            var start = racer.Start?.ToString("dd HH:mm:ss") ?? "-- --:--:--";
                            var finish = racer.Finish?.ToString("dd HH:mm:ss") ?? "-- --:--:--";

                            var totalTime = racer.Finish.HasValue && racer.Start.HasValue ? racer.Finish.Value - racer.Start.Value : TimeSpan.MaxValue;
                            string time = totalTime == System.TimeSpan.MaxValue ? "--:--:--" : (int)totalTime.TotalHours + totalTime.ToString(@"\:mm\:ss");
                            
                            switch (racer.State)
                            {
                                case Models.ResultsModel.ResultState.DidNotFinished:
                                    time = Localizer["Results.DNF"];
                                    break;
                                        
                                case Models.ResultsModel.ResultState.Disqualified:
                                    time = Localizer["Results.DSQ"];
                                    break;

                                case Models.ResultsModel.ResultState.NotStarted:
                                    time = Localizer["Results.DNS"];
                                    break;

                                case Models.ResultsModel.ResultState.NotValid:
                                    time = Localizer["Results.NV"];
                                    break;

                                case Models.ResultsModel.ResultState.Started:
                                    time = Localizer["Results.Started"];
                                    break;

                                default:
                                    break;
                            }
                        }
                        <div class="col-12">
                            @Localizer["Results.Start"]: @start
                            
                            @if (CanIEditResults)
                            {
                                <button class="btn btn-sm btn-primary" @onclick="() => EditStart(racer.Id)">
                                    <i class="fas fa-edit">@Localizer["Results.Edit"]</i>
                                </button>

                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteStart(racer.Id)">
                                    <i class="fas fa-trash">@Localizer["Results.Delete"]</i>
                                </button>

                                <button class="btn btn-sm btn-warning" @onclick="() => StartNow(racer.Id)">
                                    <i class="fas fa-times">@Localizer["Results.Now"]</i>
                                </button>
                            })
                        </div>
                        <div class="col-12">
                            @Localizer["Results.Finish"]: @finish

                            @if (CanIEditResults)
                            {
                                <button class="btn btn-sm btn-primary" @onclick="() => EditFinish(racer.Id)">
                                    <i class="fas fa-edit">@Localizer["Results.Edit"]</i>
                                </button>

                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteFinish(racer.Id)">
                                    <i class="fas fa-trash">@Localizer["Results.Delete"]</i>
                                </button>

                                <button class="btn btn-sm btn-warning" @onclick="() => FinishNow(racer.Id)">
                                    <i class="fas fa-times">@Localizer["Results.Now"]</i>
                                </button>
                            }
                        </div>
                        <hr />
                        <div class="col-12"><b>@time</b>

                        @if (CanIEditResults)
                        {
                            <button class="btn btn-sm btn-danger" @onclick="() => Dns(racer.Id)">
                                <i class="fas fa-edit">@Localizer["Results.DNS"]</i>
                            </button>

                            <button class="btn btn-sm btn-danger" @onclick="() => Dnf(racer.Id)">
                                <i class="fas fa-edit">@Localizer["Results.DNF"]</i>
                            </button>

                            <button class="btn btn-sm btn-danger" @onclick="() => Dsq(racer.Id)">
                                <i class="fas fa-edit">@Localizer["Results.DSQ"]</i>
                            </button>

                            <button class="btn btn-sm btn-danger" @onclick="() => ResetStates(racer.Id)">
                                <i class="fas fa-edit">@Localizer["Results.ResetStates"]</i>
                            </button>
                        }
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
